[gcode_macro PRINT_START]
description: Called by slicer before starting print
variable_values: {'BED': 0, 'HOTEND': 0, 'CHAMBER': 0, 'HEATSOAK': 0, 'PURGING': 0, 'TOOL_MAT': -1, 'TOOL_BND': -1, 'TOOL_COL': -1}
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    OFF_IN T=0                        ; cancel off timer
    MCUFANS_PRINT
    _SYNC_SETTINGS

    {% if printer.extruder.temperature + 5 < values.HOTEND %}
        PRINT_PREPARE
    {% else %}
        SET_HEATER HEATER=heater_bed TEMP={values.BED} WAIT=1
        SET_HEATER HEATER=extruder TEMP={values.HOTEND} WAIT=1
    {% endif %}

    _CLEAR_BUFFER
    _PLAY_PRINT_START                 ; Play print start tone

    _EXTRUDE_RELATIVE
    G0 E{CFG.print_prime} F150
    _SET_STATUS STATUS=printing
    NOZZLE_WIPE               ; Wipe the nozzle

    _CLEAR_BUFFER
    {% if CFG.print_eject and CFG.eject %}
        SET_GCODE_VARIABLE MACRO=EJECT_PARTS VARIABLE=eject_objects VALUE={printer.exclude_objects.objects}
    {% endif %}

    _EXTRUDE_RELATIVE
    _POSITION_ABSOLUTE

    {% if CFG.print_purge and PURGING == 1 %}
        LINE_PURGE
    {% else %}
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}    # Get all object points
        {% set print_x_min = (all_points | map(attribute=0) | min | default(0)) %}                          # Object x min
        {% set print_x_max = (all_points | map(attribute=0) | max | default(0)) %}                          # Object x max
        {% set print_y_min = (all_points | map(attribute=1) | min | default(0)) %}                          # Object y min
        {% set print_y_max = (all_points | map(attribute=1) | max | default(0)) %}                          # Object y max

        {% set print_x = (print_x_max + print_x_min)/2%}
        {% set print_y = (print_y_max + print_y_min)/2%}
        {% set print_z = CFG.print_start_z %}

        _LOG NAME="print.start.PRINT_START" MSG="Starting at X{print_x} Y{print_y} Z{print_z}"

        G0 X{print_x} Y{print_y} Z{print_z} F{CFG.print_start_speed * 60}
    {% endif %}
    _EXTRUDE_RELATIVE
    _POSITION_ABSOLUTE
    SET_CONFIG NAME=print_bed_clear TO=False SAVE=True

[gcode_macro PRINT_PREPARE]
description: Prepare to print
gcode:
    {% set SETTINGS = printer["gcode_macro PRINT_START"]["values"] %}
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set svv = printer.save_variables.variables %}

    {% set CURRENT_HOTEND_TEMP = printer.extruder.temperature|float %}
    {% set CURRENT_BED_TEMP = printer.heater_bed.temperature|float %}
    {% set PROBE_TEMP = 95|float %}

    {% set FILAMENT = CFG.print_filament[0] %}
    {% set DIAMETER = CFG.print_nozzle|float %}
    {% set SURFACE = CFG.print_surface %}

    {% if printer["gcode_macro SET_TOOL"].last_tool != -1 %}
        {% set FILAMENT = svv.mmu_state_gate_material[printer["gcode_macro SET_TOOL"].last_tool] %}
    {% endif %}

    _LOG NAME="print.start.PRINT_PREPARE" MSG="Preparing for print! [{SURFACE}-{DIAMETER}-{FILAMENT}: {SETTINGS.HOTEND}C/{SETTINGS.BED}C/{SETTINGS.CHAMBER}C (H/B/C)]" DISPLAY=1 NOTIFY=1
    BED_MESH_CLEAR

    # --- Heat the bed, if it's not heated, soak it
    SET_HEATER HEATER=heater_bed TEMP={SETTINGS.BED} WAIT=0 # Start heating bed
    {% if "xyz" in printer.toolhead.homed_axes %}
        PARK POS="CENTER"
    {% endif %}
    
    {% if not CFG.print_quick and CURRENT_BED_TEMP + 15 < SETTINGS.BED %}
        _LOG NAME="print.start.PRINT_PREPARE" MSG="Bed at {CURRENT_BED_TEMP}. Heat soaking bed..." DISPLAY=1
        PARK
        STEPPERS_OFF
        SOAK_BED TEMP={SETTINGS.BED} DURATION=15
    {% else %}
        _LOG NAME="print.start.PRINT_PREPARE" MSG="Bed pre-heated, setting bed to {SETTINGS.BED}C..." DISPLAY=1
    {% endif %}

    _CG28

    # --- Heat the nozzle to probing temperature
    {% if CFG.probe|string|upper == "TAP" %}
        _LOG NAME="print.start.PRINT_PREPARE" MSG="Waiting for nozzle to reach {PROBE_TEMP}C..." DISPLAY=1
        SET_HEATER HEATER=extruder TEMP={PROBE_TEMP} WAIT=1
    {% endif %}
    _CG28                            ; Conditional G28
    
    NOZZLE_SCRAPE                    ; Scrape the nozzle, if enabled
    NOZZLE_WIPE                      ; Wipe the nozzle

    _LOG NAME="print.start.PRINT_PREPARE" MSG="Wating for bed to reach {SETTINGS.BED}C..." DISPLAY=1
    SET_HEATER HEATER=heater_bed TEMP={SETTINGS.BED} WAIT=1 # Ensure bed has reached temperature

    PROBE_PRE
    PROBE_LOCK

    {% if not CFG.print_quick %}
        G28 Z
        QUAD_GANTRY_LEVEL
        
        {% if CFG.mesh %}
            {% if CFG.mesh_adaptive %}
                BED_MESH_CALIBRATE ADPATIVE=1
            {% else %}
                BED_MESH_PROFILE LOAD={CFG.mesh_name}
            {% endif %}
        {% endif %}
    {% endif %}

    _LOG NAME="print.start.PRINT_PREPARE" MSG="Homing Z..."
    G28 Z                             ; Re-home z

    PROBE_UNLOCK
    PROBE_POS
        
    PARK POS="BUCKET"                 ; Move over bucket before heating hotend
    _LOG NAME="print.start.PRINT_PREPARE" MSG="Waiting for hotend to reach {SETTINGS.HOTEND}C..." DISPLAY=1
    SET_HEATER HEATER=extruder TEMP={SETTINGS.HOTEND} WAIT=1

    {% if not printer['mmu'].enabled %}
        _EXTRUDE_RELATIVE
        _EXTRUDER_ZERO
        G0 E{CFG.unretract_start} F300
    {% elif not SETTINGS.TOOL_MAT == -1 %}
        _LOG NAME="print.start.PRINT_PREPARE" MSG="Changing tool..." DISPLAY=1
        SET_TOOL MATERIAL={SETTINGS.TOOL_MAT} BRAND={SETTINGS.TOOL_BND} COLOR={SETTINGS.TOOL_COL}
    {% endif %}

[gcode_macro PRE_PRINT]
description: Called by slicer before calling PRINT_START
gcode:
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set HOTEND_TEMP = params.HOTEND_TEMP|float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
    {% set PURGING = params.PURGING|default(1) %}
    {% set TOOL_MACRO = params.TOOL_MACRO|default(0) %}
    {% set LAYERS = params.LAYERS|default(-1)|int %}
    {% set LAYER_HEIGHT = params.LAYER_HEIGHT|default(-1)|float %}

    FORCE_CLEAR NAME="PRE_PRINT"

    {% if not LAYERS == -1 %}
        SET_PRINT_STATS_INFO TOTAL_LAYER={LAYERS}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_LAYER_STATUS VARIABLE=layer_height VALUE={LAYER_HEIGHT}
    
    
    {% set TOOL_MAT = -1 %}
    {% set TOOL_BND = -1 %}
    {% set TOOL_COL = -1 %}

    {% if TOOL_MACRO != 0 %}
        {% set TOOL_MACRO = TOOL_MACRO.split(' ') %}
        {% if TOOL_MACRO|length >= 2 %}
            {% set TOOL_MAT = TOOL_MACRO[1].split("=")[-1] %}
        {% endif %}
        {% if TOOL_MACRO|length >= 3 %}
            {% set TOOL_BND = TOOL_MACRO[2].split("=")[-1]%}
        {% endif %}
        {% if TOOL_MACRO|length >= 4 %}
            {% set TOOL_COL = TOOL_MACRO[3].split("=")[-1] %}
        {% endif %}
    {% endif %}

    _LOG NAME="print.start.PRE_PRINT" MSG="Setting pre-print values: [{BED_TEMP}C/{HOTEND_TEMP}C/{CHAMBER_TEMP}C - Starting with {TOOL_MAT} {TOOL_BND} {TOOL_COL}" DISPLAY=1
    
    {% set HEATSOAK = 0 %}
    {% set CURRENT_BED_TEMP = printer.heater_bed.temperature|float %}

    VERIFY_TOOL MATERIAL={TOOL_MAT} BRAND={TOOL_BND} COLOR={TOOL_COL} # Verify the initial filament type is loaded

    SET_HEATER HEATER=heater_bed TEMP={BED_TEMP} WAIT=0 # Set bed temp
    {% if CURRENT_BED_TEMP + 30 < BED_TEMP %}
        _LOG NAME="print.start.PRE_PRINT" MSG="Bed at {CURRENT_BED_TEMP}. Setting heatsoak to true" DISPLAY=1
        {% set HEATSOAK = 1 %}
    {% else %}
        _LOG NAME="print.start.PRE_PRINT" MSG="Bed pre-heated, setting bed to {BED_TEMP}C..." DISPLAY=1
    {% endif %}

    {% set VAL = {"BED": BED_TEMP, "HOTEND": HOTEND_TEMP, "CHAMBER": CHAMBER_TEMP, "HEATSOAK": HEATSOAK, "PURGING": PURGING, "TOOL_MAT": TOOL_MAT, "TOOL_BND": TOOL_BND, "TOOL_COL": TOOL_COL} %}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=values VALUE="{VAL | pprint | replace("\n", "") | replace("\"", "\\\"")}"
    