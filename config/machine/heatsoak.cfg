[gcode_macro CHAMBER_SOAK]
description: Wait for chamber to reach temperature
gcode:
    # Parameters
    {% set BED = params.BED|default(110)|int %}
    {% set CHAMBER = params.CHAMBER|default(40)|int %}

    SAVE_GCODE_STATE NAME=HEATSOAK
    UPDATE_DELAYED_GCODE ID=_DELAYED_OFF DURATION=0   ; cancel off timer (if there is one)
    SET_PIN PIN=caselight VALUE=0.8                   ; turn on case light
    M104 S0                                           ; turn off hotend
    M140 S{BED}                                         ; heat bed
    {% if c > 30 %}
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER} ; wait for chamber temp
    {% endif %}
    RESTORE_GCODE_STATE NAME=HEATSOAK

[gcode_macro HEAT_SOAK]
description: Interruptable heat soak

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET | default(0) | float %}
    {% set DURATION = (params.DURATION | default(5) | int) * 60 %}

    UPDATE_DELAYED_GCODE ID=_DELAYED_OFF DURATION=0 ; cancel off timer

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }

    _CG28 ; Conditional home
    PARK  ; Park nozzle
    M84   ; turn off steppers

    UPDATE_DELAYED_GCODE ID=_heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=_heat_soaker DURATION=1

[delayed_gcode _heat_soaker]
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    # update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        # update countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }
        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}
        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
    {% else %}
        {% if total_time_elapsed % 90 == 0 %}
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_heat_soaker DURATION={ heat_soak.check_interval }
        G4 P1
    {% endif %}