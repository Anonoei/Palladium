#####################################################################
#   Filament Macros
#####################################################################
# Filament Macros
#  LOAD_FILAMENT
#  UNLOAD_FILAMENT
#  CHANGE_FILAMENT
# Filament Sensor
#  FS_ENABLE
#  FS_DISABLE
# Slicer Filament Macros
#  SET_FILAMENT
#  SET_NOZZLE
# Internal Filament Macros
#  _FILAMENT_RUNOUT
#  _FILAMENT_INSERT

# -================================-
#   Filament Macros
# -================================-
[gcode_macro FILAMENT_LOAD]
description: Load filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set l = printer["gcode_macro _CONFIG"].filament_load_length|int %}
    {% set p = printer["gcode_macro _CONFIG"].filament_load_purge|int %}
    {% set w = printer["gcode_macro _CONFIG"].filament_wait|int %}

    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    _LOG NAME="Filament.LOAD" MSG="Loading filament. Heating extruder to {t}C" DISPLAY=TRUE
    M109 S{t} T0                          ; set hotend temperature and wait
    _EXTRUDE_RELATIVE
    G92 E0                                ; zero extruder
    # Pre-load
    G0 E25 F1000
    # Load filament
    G0 E{l} F300                          ; load filament into extruder
    # Wait, then purge
    _PAUSE T={w * 1000}
    G0 E{p} F300                          ; purge filament
    _CLEAR_BUFFER
    # if not printing or paused due to filament change set the extruder temp to 0
    {% if (printer.print_stats.state != "printing") and (printer.print_stats.state != "paused") %} 
        M104 S0 T0 
    {% endif %}
    _LOG NAME="Filament.LOAD" MSG="Filament loaded!" DISPLAY=TRUE
    _PLAY_FILAMENT_LOAD
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT

[gcode_macro FILAMENT_UNLOAD]
description: Unload filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = printer["gcode_macro _CONFIG"].filament_wait|int %}
    {% set l = printer["gcode_macro _CONFIG"].filament_unload_length|int %}
    
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    _LOG NAME="Filament.UNLOAD" MSG="Unloading filament..." DISPLAY=TRUE
    M109 S{t} T0                          ; set hotend temperature and wait
    _EXTRUDE_RELATIVE
    G92 E0                                ; zero extruder
    # Prepare for unload
    G0 E3   F1200                         ; extrude 3mm of filament
    G0 E-8  F600                          ; retract 8mm of filament
    _PAUSE T={w * 1000}                        ; wait for {w} seconds
    G0 E-12 F1200                         ; retract 12mm of filament
    # Unload
    G0 E-{l} F300                         ; finish retraction
    _CLEAR_BUFFER
    _LOG NAME="Filament.UNLOAD" MSG="Filament unloaded!" DISPLAY=TRUE
    _PLAY_FILAMENT_UNLOAD
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT
    SET_FILAMENT MATERIAL="NONE"

[gcode_macro FILAMENT_CHANGE]
description: Change filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = printer["gcode_macro _CONFIG"].filament_wait|int %}
    PARK_FRONT

    FILAMENT_UNLOAD TEMP={t}
    _LOG NAME="Filament.CHANGE" MSG="Waiting {w} seconds..." DISPLAY=TRUE
    _PAUSE T={w * 1000}                        ; wait for {w} seconds
    FILAMENT_LOAD TEMP={t}

# -================================-
#   Filament Sensor Macros
# -================================-

[gcode_macro FS_ENABLE] ; Add this to PRINT_START
description: Enable filament sensor
gcode:
    _LOG NAME="Filament.FS_ENABLE" MSG="Filament sensor enabled"
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=1

[gcode_macro FS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable filament sensor 
gcode:
    _LOG NAME="Filament.FS_DISABLE" MSG="Filament sensor disabled"
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS ENABLE=0

# -================================-
#   Slicer Filament Macros
# -================================-
[gcode_macro SET_FILAMENT]
description: Change defaults based on filament type
gcode:
    {% set MATERIAL = params.MATERIAL|string %}                   ; Get material type from slicer
    {% set BRAND    = params.BRAND|string %}
    {% set COLOR    = params.COLOR|string %}

    {% set FILAMENT = printer["gcode_macro _CONFIG"].filaments %}

    {% if MATERIAL == "NONE" %}
        _LOG NAME="filament.SET_FILAMENT" MSG="Set filament to none" DISPLAY=TRUE
    {% else %}
        {% if FILAMENT[MATERIAL] %}
            {% if FILAMENT[MATERIAL][BRAND] %}
                {% if FILAMENT[MATERIAL][BRAND][COLOR] %}
                    {% set FILAMENT = FILAMENT[MATERIAL][BRAND][COLOR] %}
                    _LOG NAME="filament.SET_FILAMENT" MSG="Setting filament to {MATERIAL} {BRAND} {COLOR}"
                {% else %}
                    {% set FILAMENT = FILAMENT[MATERIAL][BRAND] %}
                    LOG NAME="filament.SET_FILAMENT" MSG="Setting filament to {MATERIAL} {BRAND}"
                {% endif %}
            {% else %}
                {% set FILAMENT = FILAMENT[MATERIAL] %}
                LOG NAME="filament.SET_FILAMENT" MSG="Set filament to {MATERIAL}"
            {% endif %}
            SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_filament VALUE='"{MATERIAL},{BRAND},{COLOR}"' ; Save the material type to a variable
            SAVE_VARIABLE VARIABLE=print_filament VALUE='"{MATERIAL},{BRAND},{COLOR}"'
            SET_PRESSURE_ADVANCE ADVANCE={FILAMENT['PA']}
            #SET_GCODE_OFFSET Z=0 ; Set z_offset
        {% else %}
            _LOG NAME="filament.SET_FILAMENT" LVL="ERROR" MSG="Unknown filament material!" DISPLAY=TRUE
        {% endif %}
    {% endif %}

[gcode_macro SET_NOZZLE]
description: Change defaults based on nozzle diameter
gcode:
    {% set DIAMETER = params.DIAMETER|default(0.4)|float %}                          ; Get nozzle diameter from slicer

    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_nozzle VALUE={DIAMETER}
    SAVE_VARIABLE VARIABLE=print_nozzle VALUE={DIAMETER}

    _LOG NAME="filament.SET_NOZZLE" MSG="Setting nozzle {DIAMETER}"

    {% if DIAMETER == 0.4 %}
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif DIAMETER == 0.2 %}
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% else %}
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% endif %}


# -================================-
#   Internal Filament Macros
# -================================-
[gcode_macro _FILAMENT_INSERT]
description: Alert on filament insertion
gcode:
    _LOG NAME="Filament._FILAMENT_INSERT" MSG="Filament inserted!" DISPLAY=TRUE
    #_PLAY_FILAMENT_DETECTED

[gcode_macro _FILAMENT_RUNOUT]
description: Alert on filament runout
gcode:
    OFF_IN T={60 * 12} ; Set off timer to 12 hours
    _LOG NAME="Filament._FILAMENT_RUNOUT" MSG="Filament runout detected!" DISPLAY=TRUE
    #_PLAY_FILAMENT_RUNOUT
