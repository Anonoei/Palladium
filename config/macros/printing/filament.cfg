#####################################################################
#   Filament Macros
#####################################################################
# Filament Macros
#  LOAD_FILAMENT
#  UNLOAD_FILAMENT
#  CHANGE_FILAMENT
# Filament Sensor
#  _SET_FS
#  FS_ENABLE
#  FS_DISABLE
# Internal Filament Macros
#  _FILAMENT_RUNOUT
#  _FILAMENT_INSERT

# -================================-
#   Filament Macros
# -================================-
[gcode_macro FILAMENT_LOAD]
description: Load filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% if printer['mmu'].enabled %}
        _LOG NAME="Filament.LOAD" MSG="Performing MMU_LOAD" DISPLAY=TRUE
        MMU_LOAD
        {% set GATE = printer['mmu'].gate %}
        {% set svv = printer.save_variables.variables %}
        SET_FILAMENT MATERIAL={svv.mmu_state_gate_material[GATE]} BRAND={svv.mmu_state_gate_brand[GATE]} COLOR={svv.mmu_state_gate_color[GATE]}
    {% else %}
        SAVE_GCODE_STATE NAME=_FILAMENT_LOAD
        _LOG NAME="Filament.LOAD" MSG="Loading filament. Heating extruder to {t}C" DISPLAY=TRUE
    
        M109 S{t} T0                          ; set hotend temperature and wait
        _STATUS_LOADING
        _EXTRUDE_RELATIVE
        G92 E0                                ; zero extruder
        G0 E{CFG.filament_preload|int}       F300  ; ensure extruder has grip on filament
        G0 E{CFG.filament_load_extruder|int} F300  ; load filament to park position
        _PAUSE T={CFG.filament_wait * 1000}        ; wait for _ seconds
        G0 E{CFG.filament_load_hotend|int}   F300  ; load filament to melting pool
        G0 E{CFG.filament_load_purge}        F300  ; purge filament
        _CLEAR_BUFFER
        # if not printing or paused due to filament change set the extruder temp to 0
        {% if (printer.print_stats.state != "printing") and (printer.print_stats.state != "paused") %}
           {% if "xyz" in printer.toolhead.homed_axes %}
                NOZZLE_WIPE
            {% endif %}
            M104 S0 T0
        {% endif %}
        _LOG NAME="Filament.LOAD" MSG="Filament loaded!" DISPLAY=TRUE
        RESTORE_GCODE_STATE NAME=_FILAMENT_LOAD
    {% endif %}
    
    _PLAY_FILAMENT_LOAD
    _STATUS_STANDBY

[gcode_macro FILAMENT_UNLOAD]
description: Unload filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% if printer['mmu'].enabled %}
        _LOG NAME="Filament.LOAD" MSG="Performing MMU_EJECT" DISPLAY=TRUE
        MMU_EJECT
    {% else %}
         SAVE_GCODE_STATE NAME=_FILAMENT_UNLOAD
        _LOG NAME="Filament.UNLOAD" MSG="Unloading filament... Heating extruder to {t}C" DISPLAY=TRUE
        M109 S{t} T0                          ; set hotend temperature and wait
        _STATUS_UNLOADING
        _EXTRUDE_RELATIVE
        G92 E0                                ; zero extruder
    
        G0 E{CFG.filament_preunload}        F600  ; purge filament to get proper tip position
        G0 E-{CFG.filament_unload_hotend}   F300  ; load filament tip to melting pool
        M109 S{t - 20}
        _PAUSE T={CFG.filament_wait * 1000}       ; wait for _ seconds
        G0 E-{CFG.filament_unload_park}     F300  ; unload filament to park position
        G0 E-{CFG.filament_unload_extruder} F600  ; unload filament from extruder gears
        G0 E-{CFG.filament_unload_eject}    F600  ; unload until filament is ejected
        G0 E-{CFG.filament_unload_eject}    F600  ; unload until filament is ejected
        _CLEAR_BUFFER
        # if not printing or paused due to filament change set the extruder temp to 0
        {% if (printer.print_stats.state != "printing") and (printer.print_stats.state != "paused") %}
            {% if "xyz" in printer.toolhead.homed_axes %}
                NOZZLE_WIPE
            {% endif %}
            M104 S0 T0 
        {% endif %}
        _LOG NAME="Filament.UNLOAD" MSG="Filament unloaded!" DISPLAY=TRUE
        RESTORE_GCODE_STATE NAME=_FILAMENT_UNLOAD
    {% endif %}

    _PLAY_FILAMENT_UNLOAD
    SET_FILAMENT MATERIAL="NONE"
    _STATUS_STANDBY

[gcode_macro FILAMENT_CHANGE]
description: Change filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = printer["gcode_macro _CONFIG"].filament_wait|int %}
    PARK_FRONT

    FILAMENT_UNLOAD TEMP={t}
    _LOG NAME="Filament.CHANGE" MSG="Waiting {w} seconds..." DISPLAY=TRUE
    _PAUSE T={w * 1000}                        ; wait for {w} seconds
    FILAMENT_LOAD TEMP={t}

# -================================-
#   Filament Sensor Macros
# -================================-
[gcode_macro _SET_FS]
gcode:
    {% set ENABLE = params.ENABLE %}
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% if CFG.filament_sensor %}
        {% if ENABLE %}
            {% set ENABLE = 1 %}
            _LOG NAME="Filament._SET_FS" MSG="Filament sensor enabled"
        {% else %}
            {% set ENABLE = 0 %}
            _LOG NAME="Filament._SET_FS" MSG="Filament sensor disabled"
        {% endif %}
        G92 E0
        SET_FILAMENT_SENSOR SENSOR={CFG.filament_sensor_name} ENABLE={ENABLE}
    {% endif %}

[gcode_macro FS_ENABLE] ; Add this to PRINT_START
description: Enable filament sensor
gcode:
    _SET_FS ENABLE=True

[gcode_macro FS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable filament sensor 
gcode:
    _SET_FS ENABLE=False

# -================================-
#   Internal Filament Macros
# -================================-
[gcode_macro _FILAMENT_INSERT]
description: Alert on filament insertion
gcode:
    _LOG NAME="Filament._FILAMENT_INSERT" MSG="Filament inserted!" DISPLAY=TRUE
    #_PLAY_FILAMENT_DETECTED

[gcode_macro _FILAMENT_RUNOUT]
description: Alert on filament runout
gcode:
    OFF_IN T={60 * 12} ; Set off timer to 12 hours
    _LOG NAME="Filament._FILAMENT_RUNOUT" MSG="Filament runout detected!" DISPLAY=TRUE
    #_PLAY_FILAMENT_RUNOUT
