[gcode_macro PRINT_WIPE]
description: Print-safe wipe
gcode:
    {% set OBJs = printer['exclude_object'].objects %}
    # list of dictionaries
    # [
    #    {'name', 'center': [x, y], 'polygon': [[x,y], [x,y], [x,y]]},
    #    {'name', 'center': [x, y], 'polygon': [[x,y], [x,y], [x,y]]}
    # ]

[gcode_macro CANCEL_PRINT]
description: Cancel print
rename_existing: CANCEL_PRINT_BASE
gcode:
    OFF_IN T=-1 ; set timeout back to configured value
    CLEAR_PAUSE

    #SDCARD_RESET_FILE

    TURN_OFF_HEATERS
    M106 S0
    # clear pause_next_layer and pause_at_layer as preparation for next print
    SET_PAUSE_NEXT_LAYER ENABLE=0
    SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0

    CANCEL_PRINT_BASE
    PRINT_END

[gcode_macro PAUSE]
description: Pause print
rename_existing: PAUSE_BASE
gcode:
    {% set z_hop = params.Z|default(5)|int %}                                                   ; z hop amount
    {% set hotend = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}

    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% if printer['pause_resume'].is_paused|int == 0 %}
        _LOG NAME="print.states.PAUSE" MSG="Pausing print!" DISPLAY=1
        {% set PAUSE_X = printer['gcode_move'].gcode_position.x %}
        {% set PAUSE_Y = printer['gcode_move'].gcode_position.y %}
        {% set PAUSE_Z = printer['gcode_move'].gcode_position.z %}
        {% set PAUSE_VELOC = printer.toolhead.max_velocity %}
        {% set PAUSE_ACCEL = printer.toolhead.max_accel %}

        SET_VELOCITY_LIMIT VELOCITY={CFG.printer_speed} ACCEL={CFG.printer_accel}
        _EXTRUDE_RELATIVE
        _EXTRUDER_ZERO
        G0 E-{printer['gcode_macro _CONFIG'].filament_melting_pool} F1200
        PAUSE_BASE
        
        {% if (printer.gcode_move.position.z + z_hop) < printer.toolhead.axis_maximum.z %}      ; check that z hop doesn't exceed z max
            _POSITION_RELATIVE
            G0 Z{z_hop} F900                                                                    ; raise Z up by z hop amount
        {% else %}
            LOG NAME="print.states.PAUSE" LVL="WARN" MSG="Pause zhop exceeds maximum Z height." DISPLAY=1
            {% set z_hop = 0 %}
        {% endif %}
        
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=values VALUE="{{'hotend': hotend, 'z_hop': z_hop, 'x': PAUSE_X, 'y': PAUSE_Y, 'z': PAUSE_Z, 'accel': PAUSE_ACCEL, 'veloc': PAUSE_VELOC}}"
        _POSITION_ABSOLUTE
        PARK POS="BUCKET"
        M104 S0                                                                             ; turn off hotend
        OFF_IN T={8 * 60}                                                                   ; set off timer
        _SET_STATUS STATUS=printing
    {% endif %}

[gcode_macro RESUME]
description: Resume print
rename_existing: RESUME_BASE
variable_values: {'hotend': 0, 'z_hop': 5, 'x': -99, 'y': -99, 'z': -99, 'accel': -1, 'veloc': -1}
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
        _LOG NAME="print.states.RESUME" MSG="Resuming print with {values}" DISPLAY=1
        OFF_IN T=-1  ; set timeout back to configured value
        {% if values.hotend > 0 %}
            M109 S{values.hotend|int} ; Set and wait for extruder
        {% endif %}
        _EXTRUDE_RELATIVE
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %} 
            G0 E{printer['gcode_macro _CONFIG'].filament_melting_pool + 5} F150
        {% endif %}
        NOZZLE_WIPE
        PARK POS=BUCKET
        _POSITION_ABSOLUTE
        {% if values.z + values.z_hop < 20 %}
            G0 Z20
        {% else %}
            G0 Z{values.z + values.z_hop} F3000
        {% endif %}
        G0 X{values.x} Y{values.y} F5000
        G0 Z{values.z} F3000
        SET_VELOCITY_LIMIT VELOCITY={values.veloc} ACCEL={values.accel}
        RESUME_BASE
    {% endif %}