# print.states
#  CANCEL_PRINT
#  PAUSE
#  RESUME

[gcode_macro CANCEL_PRINT]
description: Cancel print
rename_existing: CANCEL_PRINT_BASE
gcode:
    OFF_IN T=-1 ; set timeout back to configured value
    CLEAR_PAUSE

    #SDCARD_RESET_FILE

    TURN_OFF_HEATERS
    M106 S0
    # clear pause_next_layer and pause_at_layer as preparation for next print
    SET_PAUSE_NEXT_LAYER ENABLE=0
    SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0

    CANCEL_PRINT_BASE
    PRINT_END

[gcode_macro PAUSE]
description: Pause print
rename_existing: PAUSE_BASE
gcode:
    {% set z = params.Z|default(5)|int %}                                                   ; z hop amount
    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
    {% set restore = False if printer.toolhead.extruder == ''
              else True  if params.RESTORE|default(1)|int == 1 else False %}

    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SAVE_GCODE_STATE NAME=PAUSE                                                         ; save current print position for resume    
        _EXTRUDE_RELATIVE
        _EXTRUDER_ZERO
        G0 E-{printer['gcode_macro _CONFIG'].filament_melting_pool} F1200

        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=values VALUE="{{'restore': restore, 'temp': temp, 'zhop': z}}"
        PAUSE_BASE

        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}      ; check that z hop doesn't exceed z max
            _POSITION_RELATIVE
            G0 Z{z} F900                                                                    ; raise Z up by z hop amount
        {% else %}
            LOG NAME="print.states.PAUSE" LVL="WARN" MSG="Pause zhop exceeds maximum Z height." DISPLAY=TRUE
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=values VALUE="{{'restore': restore, 'temp': temp, 'zhop': 0}}"
        {% endif %}
        _POSITION_ABSOLUTE
        PARK POS="BUCKET"
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                             ; turn off hotend
        OFF_IN T={8 * 60}                                                                   ; set off timer
        _SET_STATUS STATUS=printing
    {% endif %}

[gcode_macro RESUME]
description: Resume print
rename_existing: RESUME_BASE
variable_values: {'restore': False, 'temp': 0, 'zhop': 5}
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
        OFF_IN T=-1                                      ; set timeout back to configured value
        {% if values.temp > 0 %}
            M109 S{values.temp|int} ; Set and wait for extruder
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100 ; Move back to parked pos
        _POSITION_RELATIVE
        _EXTRUDE_RELATIVE
        G0 Z{values.zhop * -1} F900
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %} 
            G0 E{printer['gcode_macro _CONFIG'].filament_melting_pool + 5} F150
        {% endif %}
        NOZZLE_WIPE
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=100     ; restore position

        {% if printer.idle_timeout.state|upper == "IDLE" %}
          {% if values.restore %} M109 S{values.temp} {% endif %}
        {% endif %}
        RESUME_BASE VELOCITY={params.VELOCITY|default(printer.configfile.settings.pause_resume.recover_velocity)}
    {% endif %}