#####################################################################
#   Sync macros
#####################################################################
#  SET_SURFACE
#  SET_FILAMENT
#  SET_NOZZLE
#  _SYNC_SETTINGS
[gcode_macro SET_SURFACE]
description: Set probe offset based on build surface
gcode:
    {% set MATERIAL = params.MATERIAL|string|upper %}

    {% set SURFACE = printer["gcode_macro _CONFIG"].surfaces %}

    {% if SURFACE[MATERIAL] %}
        SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_surface VALUE='"{MATERIAL}"' ; Save the surface type to a variable
        SAVE_VARIABLE VARIABLE=print_surface VALUE='"{MATERIAL}"'

        _LOG NAME="sync.SET_SURFACE" MSG="Setting surface to {MATERIAL}"
        SET_GCODE_OFFSET Z={SURFACE[MATERIAL]['Height']}
    {% else %}
        _LOG NAME="sync.SET_SURFACE" LVL="ERROR" MSG="Unknown surface material!" DISPLAY=TRUE
    {% endif %}

[gcode_macro SET_FILAMENT]
description: Change defaults based on filament type
gcode:
    {% set MATERIAL = params.MATERIAL|upper|string %}                   ; Get material type from slicer
    {% set BRAND    = params.BRAND|upper|string %}
    {% set COLOR    = params.COLOR|upper|string %}

    {% set CFG = printer['gcode_macro _CONFIG'] %}

    {% set FILAMENT = CFG.filaments %}

    {% if MATERIAL == "NONE" %}
        _LOG NAME="sync.SET_FILAMENT" MSG="Setting filament to none" DISPLAY=TRUE
        SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_filament VALUE=['"NONE"','"NONE"','"NONE"']
        SAVE_VARIABLE VARIABLE=print_filament VALUE=['"NONE"','"NONE"','"NONE"']
        # Revert settings to default
        SET_PRESSURE_ADVANCE ADVANCE=0
        SET_RETRACTION RETRACT_LENGTH={CFG.retract_length} RETRACT_SPEED={CFG.retract_speed} UNRETRACT_LENGTH={CFG.unretract_length} UNRETRACT_SPEED={CFG.unretract_speed}
    {% else %}
        {% if FILAMENT[MATERIAL][BRAND] %}
            {% set FILAMENT = FILAMENT[MATERIAL][BRAND] %}
            _LOG NAME="filament.SET_FILAMENT" MSG="Setting filament to {MATERIAL} {BRAND} {COLOR}"
            SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"'] ; Save the material type to a variable
            SAVE_VARIABLE VARIABLE=print_filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"']

            SET_PRESSURE_ADVANCE ADVANCE={FILAMENT['PA']}
            SET_RETRACTION RETRACT_LENGTH={FILAMENT['Retract']} RETRACT_SPEED={FILAMENT['RetractSpeed']} UNRETRACT_LENGTH={FILAMENT['Retract']} UNRETRACT_SPEED={FILAMENT['RetractSpeed']}
        {% else %}
            _LOG NAME="sync.SET_FILAMENT" LVL="ERROR" MSG="Unknown filament material/brand!" DISPLAY=TRUE
        {% endif %}
    {% endif %}

[gcode_macro SET_NOZZLE]
description: Change defaults based on nozzle diameter
gcode:
    {% set DIAMETER = params.DIAMETER|default(0.4)|float %}                          ; Get nozzle diameter from slicer

    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_nozzle VALUE={DIAMETER}
    SAVE_VARIABLE VARIABLE=print_nozzle VALUE={DIAMETER}

    _LOG NAME="sync.SET_NOZZLE" MSG="Setting nozzle to {DIAMETER}"

    {% if DIAMETER == 0.4 %}
        #SET_GCODE_OFFSET Z_ADJUST=0 ; Adjust z_offset
    {% elif DIAMETER == 0.2 %}
        #SET_GCODE_OFFSET Z_ADJUST=0 ; Adjust z_offset
    {% else %}
        #SET_GCODE_OFFSET Z_ADJUST=0 ; Adjust z_offset
    {% endif %}

[gcode_macro _SYNC_SETTINGS]
description: Sync printer settings with settings file
gcode:
    {% set STARTUP = params.STARTUP|default(False)%}
    {% set cfg = printer["gcode_macro _CONFIG"] %}
    {% set svv = printer.save_variables.variables %}
    # Machine
    _SET_SPEED PERCENT=100
    SET_VELOCITY_LIMIT VELOCITY={cfg.printer_speed} ACCEL={cfg.printer_accel} SQUARE_CORNER_VELOCITY={cfg.printer_scv} ACCEL_TO_DECEL={cfg.printer_decel}
    # Extruder
    _SET_EXTRUDE PERCENT=100
    # Saved variables
    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_bed_clear VALUE={svv.print_bed_clear|default(False)}

    SET_SURFACE MATERIAL={svv.print_surface|default("TEXTURED")}
    {% set FILAMENT = svv.print_filament|default(['"ABS"','"POLYMAKER"','"BLACK"']) %}
    SET_FILAMENT MATERIAL={FILAMENT[0]} BRAND={FILAMENT[1]} COLOR={FILAMENT[2]}
    SET_NOZZLE DIAMETER={svv.print_nozzle|default(0.4)}

    # MMU
    {% if cfg.ercf_enabled %}
        {% if STARTUP == True %}
            {% set MATERIALS = svv.mmu_state_gate_material %}
            {% set BRANDS = svv.mmu_state_gate_brand %}
            {% set COLORS = svv.mmu_state_gate_color %}
            {% for gate in range(0, cfg.ercf_gates) %}
                SET_MMU_GATE GATE={gate} MATERIAL={MATERIALS[gate]} BRAND={BRANDS[gate]} COLOR={COLORS[gate]}
            {% endfor %}
        {% endif %}
    {% else %}
        MMU_DISABLE
    {% endif %}