#####################################################################
#   Sync macros
#####################################################################
#  SET_SURFACE
#  SET_FILAMENT
#  SET_NOZZLE
#  _SYNC_SETTINGS
[gcode_macro SET_SURFACE]
description: Set probe offset based on build surface
gcode:
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _CONFIG"].print_surface)|string|upper %}

    {% set CFG     = printer["gcode_macro _CONFIG"] %}
    {% set SURFACE = CFG.surfaces %}

    {% if SURFACE['Enabled'] %}
        {% if SURFACE[MATERIAL] %}
            SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_surface VALUE='"{MATERIAL}"' ; Save the surface type to a variable
            SAVE_VARIABLE VARIABLE=print_surface VALUE='"{MATERIAL}"'
    
            _LOG NAME="sync.SET_SURFACE" MSG="Setting surface to {MATERIAL}"
            SET_GCODE_OFFSET Z={SURFACE[MATERIAL]['Height']}
        {% else %}
            _LOG NAME="sync.SET_SURFACE" LVL=ERROR MSG="Unknown surface material!" DISPLAY=TRUE
        {% endif %}
    {% endif %}

[gcode_macro SET_FILAMENT]
description: Change defaults based on filament type
gcode:
    {% set MATERIAL = params.MATERIAL|upper|string %}                   ; Get material type from slicer
    {% set BRAND    = params.BRAND|upper|string %}
    {% set COLOR    = params.COLOR|upper|string %}

    {% set CFG      = printer["gcode_macro _CONFIG"] %}
    {% set FILAMENT = CFG.filaments %}

    {% if FILAMENT['Enabled'] %}
        {% if MATERIAL == "NONE" or not 'MATERIAL' in params %}
            _LOG NAME="sync.SET_FILAMENT" MSG="Setting filament to none" DISPLAY=TRUE
            SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_filament VALUE=['"NONE"','"NONE"','"NONE"']
            SAVE_VARIABLE VARIABLE=print_filament VALUE=['"NONE"','"NONE"','"NONE"']
            # Revert settings to default
            SET_PRESSURE_ADVANCE ADVANCE={CFG.printer_pa} SMOOTH_TIME={CFG.printer_pa_st}
            SET_RETRACTION RETRACT_LENGTH={CFG.retract_length} RETRACT_SPEED={CFG.retract_speed} UNRETRACT_LENGTH={CFG.unretract_length} UNRETRACT_SPEED={CFG.unretract_speed}
        {% else %}
            {% if FILAMENT[MATERIAL][BRAND] %}
                {% set FILAMENT = FILAMENT[MATERIAL][BRAND] %}
                _LOG NAME="filament.SET_FILAMENT" MSG="Setting filament to {MATERIAL} {BRAND} {COLOR}"
                SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"'] ; Save the material type to a variable
                SAVE_VARIABLE VARIABLE=print_filament VALUE=['"{MATERIAL}"','"{BRAND}"','"{COLOR}"']
    
                SET_PRESSURE_ADVANCE ADVANCE={FILAMENT['PA']} SMOOTH_TIME={FILAMENT['PA_ST']}
                SET_RETRACTION RETRACT_LENGTH={FILAMENT['Retract']} RETRACT_SPEED={FILAMENT['RetractSpeed']} UNRETRACT_EXTRA_LENGTH={FILAMENT['Unretract']} UNRETRACT_SPEED={FILAMENT['UnretractSpeed']}
            {% else %}
                _LOG NAME="sync.SET_FILAMENT" LVL=ERROR MSG="Unknown filament material/brand!" DISPLAY=TRUE
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro SET_NOZZLE]
description: Change defaults based on nozzle diameter
gcode:
    {% set DIAMETER = params.DIAMETER|default(printer["gcode_macro _CONFIG"].print_nozzle)|string %}                          ; Get nozzle diameter from slicer

    {% set CFG    = printer["gcode_macro _CONFIG"] %}
    {% set NOZZLE = CFG.nozzles %}

    _LOG NAME="sync.SET_NOZZLE" LVL=TRACE MSG="Running..."
    {% if NOZZLE['Enabled'] %}
        {% if NOZZLE[DIAMETER] %}
            {% set NOZZLE = NOZZLE[DIAMETER] %}
            {% set prevNOZZLE = NOZZLE[printer["gcode_macro _CONFIG"].print_nozzle] %}
            {% if not NOZZLE == prevNOZZLE %}
                SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_nozzle VALUE='"{DIAMETER}"'
                SAVE_VARIABLE VARIABLE=print_nozzle VALUE='"{DIAMETER}"'

                _LOG NAME="sync.SET_NOZZLE" MSG="Setting nozzle to {DIAMETER}"
                SET_GCODE_OFFSET Z_ADJUST=-{NOZZLE['ZAdjust']} ; Undo previous z_offset
                SET_GCODE_OFFSET Z_ADJUST={NOZZLE['ZAdjust']} ; Adjust z_offset
            {% endif %}
        {% else %}
            _LOG NAME="sync.SET_NOZZLE" LVL=ERROR MSG="Unknown nozzle size!" DISPLAY=TRUE
        {% endif %}
    {% endif %}

[gcode_macro _SYNC_SETTINGS]
description: Sync printer settings with settings file
gcode:
    {% set STARTUP = params.STARTUP|default(False) %}

    {% set CFG = printer["gcode_macro _CONFIG"] %}
    {% set svv = printer.save_variables.variables %}

    # Machine
    _SET_SPEED PERCENT=100
    SET_VELOCITY_LIMIT VELOCITY={CFG.printer_speed} ACCEL={CFG.printer_accel} SQUARE_CORNER_VELOCITY={CFG.printer_scv} ACCEL_TO_DECEL={CFG.printer_decel}
    # Extruder
    _SET_EXTRUDE PERCENT=100
    # Saved variables
    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=print_bed_clear VALUE={svv.print_bed_clear|default(False)}

    {% if CFG.surfaces['Enabled'] %}
        SET_SURFACE MATERIAL={svv.print_surface|default("PEI_TEXTURED")}
    {% endif %}
    {% if CFG.nozzles['Enabled'] %}
        SET_NOZZLE DIAMETER={svv.print_nozzle|default("0.4")}
    {% endif %}
    
    {% if not CFG.mmu_enabled %}
        {% if CFG.filaments['Enabled'] %}
            {% set FILAMENT = svv.print_filament|default(['"ABS"','"POLYMAKER"','"BLACK"']) %}
            SET_FILAMENT MATERIAL={FILAMENT[0]} BRAND={FILAMENT[1]} COLOR={FILAMENT[2]}
        {% else %}
            SET_FILAMENT MATERIAL=NONE
        {% endif %}
        MMU ENABLE=0
    {% else %}
        {% if STARTUP %}
            {% set MATERIALS = svv.mmu_state_gate_material %}
            {% set BRANDS = svv.mmu_state_gate_brand %}
            {% set COLORS = svv.mmu_state_gate_color %}
            {% for gate in range(0, CFG.mmu_gates) %}
                SET_MMU_GATE GATE={gate} MATERIAL={MATERIALS[gate]} BRAND={BRANDS[gate]} COLOR={COLORS[gate]}
            {% endfor %}
        {% endif %}
    {% endif %}