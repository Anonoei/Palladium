#####################################################################
#   Filament Macros
#####################################################################
# Filament Macros
#  LOAD_FILAMENT
#  UNLOAD_FILAMENT
# Slicer Filament Macros
#  SET_FILAMENT
#  SET_NOZZLE
# Internal Filament Macros
#  _FILAMENT_RUNOUT
#  _FILAMENT_INSERT

# -================================-
#   Filament Macros
# -================================-
[gcode_macro LOAD_FILAMENT]
description: Load filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = params.WAIT|default(2)|int %}

    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    {% if (printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor_enabled == False) or ((printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor_enabled == True) and (printer[printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor].filament_detected == False)) %}
        RESPOND MSG="Loading filament..."
        # Check if extruder can currently extrude, and ensure minimum temp isn't 0
        {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target == 0) %}
            RESPOND MSG="Heating extruder to {t}C"
            M109 S{t} T0                      ; set temperature and wait
        {% endif %}
        M83                                   ; set extruder to relative
        G92 E0                                ; zero extruder
        G0 E20 F300                           ; pull filament into extruder
        {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target == 0) %}
            RESPOND MSG="Heating extruder to {t}C"
            M109 S{t} T0                      ; set temperature and wait
        {% endif %}
        G1 E60 F300                           ; pull filament through hotend
        M400
        # if not printing or paused due to filament change set the extruder temp to 0
        {% if (printer.print_stats.state != "printing") and (printer.print_stats.state != "paused") %} 
            M104 S0 T0 
        {% endif %}
        RESPOND MSG="Filament loaded!"
        _PLAY_FILAMENT_LOAD
    {% else %}
        RESPOND MSG="Filament already loaded!"
    {% endif %}
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = params.WAIT|default(2)|int %}
    
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    {% if (printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor_enabled == False) or ((printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor_enabled == True) and (printer[printer['gcode_macro _CLIENT_VARIABLE'].filament_sensor].filament_detected == True)) %}
        RESPOND MSG="Unloading filament..."
        M83                                   ; set extruder to relative
        G92 E0                                ; zero extruder
        # Check if extruder can currently extrude, and ensure minimum temp isn't 0
        {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target == 0) %}
            RESPOND MSG="Heating extruder to {t}C"
            M109 S{t} T0                      ; set temperature and wait
        {% endif %}
        G0 E-5  F600 	                      ; retract filament to cool it a bit
        G4 P{w * 1000}                        ; wait for {w} seconds
        G0 E4.5 F600                          ; push the filament back 
        G0 E-5  F600 	                      ; retract filament to cold end
        G0 E-50 F300	                      ; finish retraction
        M400
        RESPOND MSG="Filament unloaded!"
        _PLAY_FILAMENT_UNLOAD
    {% else %}
        RESPOND MSG="No filament is loaded!"
    {% endif %}
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT

[gcode_macro CHANGE_FILAMENT]
description: Change filament
gcode:
    {% set t = params.TEMP|default(235)|int %}
    {% set w = params.WAIT|default(30)|int %}
    PARK_FRONT
    {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target == 0) %}
        RESPOND MSG="Heating extruder to {t}C"
        M109 S{t} T0                      ; set temperature and wait
    {% endif %}
    UNLOAD_FILAMENT TEMP={t}
    G4 P{w * 1000}                        ; wait for {w} seconds
    LOAD_FILAMENT TEMP={t}
    

# -================================-
#   Slicer Filament Macros
# -================================-
[gcode_macro SET_FILAMENT]
description: Change defaults based on filament type
gcode:
    {% set MATERIAL = params.MATERIAL|default('ABS')|string %}                   ; Get material type from slicer
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=print_filament VALUE='"{MATERIAL}'" ; Save the material type to a variable
    {% if MATERIAL == 'ABS' %} ; If material type is ABS
        SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif MATERIAL == 'PLA' %} ; If material type is PLA
        SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
        SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=2000 ; Set max speed/acceleration
        #SET_INPUT_SHAPER SHAPER_FREQ_X=58.6 SHAPER_FREQ_Y=34.2 SHAPER_TYPE_X=mzv SHAPER_TYPE_Y=mzv ; Set input_shaper
    {% else %} ; If any other material type
        SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
        #SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% endif %}

[gcode_macro SET_NOZZLE]
description: Change defaults based on nozzle diameter
gcode:
    {% set DIAMETER = params.DIAMETER|default(0.4)|float %}                          ; Get nozzle diameter from slicer
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=print_nozzle VALUE={DIAMETER} ; Save the nozzle diameter to a variable
    {% if DIAMETER == 0.4 %}
        SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% elif DIAMETER == 0.2 %}
        SET_GCODE_OFFSET Z=0 ; Set z_offset
    {%else %}
        SET_GCODE_OFFSET Z=0 ; Set z_offset
    {% endif %}


# -================================-
#   Internal Filament Macros
# -================================-
[gcode_macro _FILAMENT_INSERT]
description: Alert on filament insertion
gcode:
    #RESPOND MSG="Filament Detected!"
    _PLAY_FILAMENT_DETECTED

[gcode_macro _FILAMENT_RUNOUT]
description: Alert on filament runout
gcode:
    UPDATE_DELAYED_GCODE ID=_DELAYED_OFF DURATION=0 ; cancel off timer
    _PLAY_FILAMENT_RUNOUT
