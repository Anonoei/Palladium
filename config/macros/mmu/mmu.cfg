[mmu]
happy_hare_version: 2.3    # Don't mess, used for upgrade detection
# 1.1 original design, add "s" suffix for Sprigy, "b" for Binky, "t" for Triple-Decky
#     e.g. "1.1sb" for v1.1 with Springy mod and Binky encoder
mmu_vendor: ERCF            # MMU family
mmu_version: 1.1sb          # MMU hardware version number (add mod suffix documented above)
mmu_num_gates: 6            # Number of selector gates

# MMU Limits ---------------------------------------------------------------------------------------------------------------
gear_max_velocity     :  300
gear_max_accel        : 1500
selector_max_velocity :  250
selector_max_accel    : 1200

# Servo configuration  -----------------------------------------------------------------------------------------------------
servo_up_angle    :  30
servo_down_angle  : 120
servo_move_angle  :  30

servo_duration    :   0.2  # Duration of PWM burst sent to servo (automatically turns off)
servo_dwell       :   0.5  # Minimum time given to servo to complete movement prior to next move
servo_active_down :   0    # CAUTION: 1=Force servo to stay active when down, 0=Release after movement

# Logging ------------------------------------------------------------------------------------------------------------------
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
#
log_level          : 1
log_file_level     : 4     # Can also be set to -1 to disable log file completely
log_statistics     : 1     # 1 to log statistics on every toolchange, 0 to disable (but still recorded)
log_visual         : 2     # 1 log visual representation of filament, 2 shortened KlipperScreen friendly, 0 disable
log_startup_status : 1     # Whether to log tool to gate status on startup, 1 = summary, 2 = full, 0 = disable

# Movement speeds ----------------------------------------------------------------------------------------------------------
#
# Long moves are faster than the small ones and used for the bulk of the bowden movement. Note that you can set two fast load
# speeds depending on whether MMU thinks it is pulling from the buffer or from the spool. It is often helpful to use a lower
# speed when pulling from the spool because more force is required to overcome friction and this prevents loosing steps.
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower for really low noise
# NOTE: Encoder cannot keep up much above 250mm/s so make sure `bowden_apply_correction` is off at very high speeds!
#
gear_from_buffer_speed    : 100  # mm/s Conservative value is 100mm/s, Max around 350mm/s
gear_from_buffer_accel    : 400  # Normal accelaration when loading filament
gear_from_spool_speed     :  60  # mm/s Use (lower) speed when loading from a gate for the first time (i.e. pulling from spool)
gear_from_spool_accel     : 100  # Accelaration when loading from spool
gear_short_move_speed     :  40  # mm/s Conservative value is 35mm/s. Max around 100mm/s
gear_short_move_accel     : 400  # Usually the same as gear_from_buffer_accel (for short movements)
gear_short_move_threshold :  60  # Move distance that controls application of 'short_move' speed/accel
gear_homing_speed         :  50  # mm/s Speed of gear stepper only homing moves (e.g. extruder homing)

# Speeds of extruder movement. The 'sync' speeds will be used when gear and extruder steppers are moving in sync
extruder_load_speed        :  5  # mm/s speed of load move inside extruder from homing position to meltzone
extruder_unload_speed      : 10  # mm/s speed of unload moves inside of extruder (very initial move from meltzone is 50% of this)
extruder_sync_load_speed   :  5  # mm/s speed of synchronized extruder load moves
extruder_sync_unload_speed :  5  # mm/s speed of synchronized extruder unload moves
extruder_homing_speed      :  5  # mm/s speed of extruder only homing moves (e.g. to toolhead sensor)

# Selector movement speeds
selector_move_speed   : 100  # mm/s speed of selector movement (not touch)
selector_homing_speed :  30  # mm/s speed of initial selector homing move (not touch)
selector_touch_speed  :  40  # mm/s speed of all touch selector moves (if stallguard configured)
selector_touch_enable :   0  # If selector touch operation is possible this can be used to disable it 1=enabled, 0=disabled

# Gate loading/unloading ------------------------------------------------------------------------------------------------
gate_homing_endstop     : encoder  # Name of gate endstop, "encoder" forces use of encoder for parking
gate_homing_max         : 70       # Maximum move distance to home to the gate (actual move distance for encoder parking)
gate_unload_buffer      : 50       # Amount to reduce the fast unload so that filament doesn't overshoot when parking
gate_load_retries       :  2       # Number of times MMU will attempt to grab the filament on initial load (max 5)
gate_endstop_to_encoder :  0       # Advanced: Distance between gate endstop and encoder (IF both fitted AND endstop before encoder)

# Bowden tube loading/unloading --------------------------------------------------------------------------------------------
bowden_apply_correction           :  1      # 1 to enable, 0 disabled (default) [Requires Encoder]
bowden_allowable_load_delta       : 20.0    # How close in mm the correction moves will attempt to get to target [Requires Encoder]
bowden_pre_unload_test            :  1      # 1 to check for bowden movement before full pull (slower), 0 don't check (faster) [Requires Encoder]
bowden_pre_unload_error_tolerance : 50


# Extruder homing ---------------------------------------------------------------------------------------------------------
extruder_homing_max     : 100        # Maximum distance to advance in order to attempt to home the extruder
extruder_homing_endstop : collision  # Filament homing method/endstop name
extruder_homing_current : 40         # % gear_stepper current (10%-100%) to use when homing to extruder homing (100 to disable)

extruder_force_homing   : 0

# Built in default toolhead loading and unloading ---------------------------------------------------------------------------------------------------------
toolhead_homing_max           : 200   # Maximum distance to advance in order to attempt to home to toolhead sensor

toolhead_extruder_to_nozzle   : 118   # Extruder gears -> nozzle tip
toolhead_sensor_to_nozzle     :  62   # Toolhead sensor -> nozzle tip (Not using)

toolhead_unload_safety_margin :  10
toolhead_move_error_tolerance :  60

toolhead_sync_unload           :  1   # Extruder unloading (except stand alone tip forming) leverages motor synchronization

# Synchronized gear/extruder movement and tip forming ----------------------------------------------------------------------
sync_to_extruder          :   1     # Gear motor is synchronized to extruder during print
sync_gear_current         : 100     # % of gear_stepper current (10%-100%) to use when syncing with extruder during print

sync_form_tip             :   1     # Synchronize during standalone tip formation (initial part of unload)
extruder_form_tip_current : 100     # % of extruder current (100%-150%) to use when forming tip (100 to disable)
force_form_tip_standalone :   0     # 0 = Default smart behavor, 1 = Always do standalone tip forming (TURN SLICER OFF!)


# Clog detection and Endless Spool ---------------------------------------------------------------------------------------
enable_clog_detection     :  2   # 0 = disable, 1 = static length clog detection, 2 = automatic length clog detection
enable_endless_spool      :  1   # 0 = disable endless spool,  1 = enable endless spool (requires clog detection)
endless_spool_on_load     :  0   # 0 = don't apply endless spool on load, 1 = run endless spool if gate is empty
endless_spool_final_eject : 50   # Extra unload distance on runout to prevent accidental reload
enable_spoolman           :  1   # 0 = disable spoolman support,  1 = enable spoolman (requires spoolman setup)

# Turn on behavior -------------------------------------------------------------------------------------------------------
# Levels: 0 = start fresh every time except calibration data (the former default behavior)
#         1 = restore persisted endless spool groups
#         2 = additionally restore persisted tool-to-gate mapping
#         3 = additionally restore persisted gate status (filament availability, material and color) (default)
#         4 = additionally restore persisted tool, gate and filament position! (Recommended when MMU is working well)
#
persistence_level: 4

# Misc configurable, but fairly fixed values -----------------------------------------------------------------------------
#
extruder                   : extruder  # Name of the toolhead extruder that MMU is using
timeout_pause              : 72000     # Idle time out in seconds used when in MMU pause state
disable_heater             :   600     # Delay in seconds after which the hotend heater is disabled in the MMU_PAUSE state
default_extruder_temp      :   235     # The baseline temperature for performing swaps and forming tips outside of a print
z_hop_height_error         :     5     # Height in mm of z_hop move on pause to avoid blob on print
z_hop_height_toolchange    :     0.2   # Height in mm of z_hop move on toolchange or runout to avoid blob on print
z_hop_speed                :    15     # Speed of z_hop move (mm/s)
slicer_tip_park_pos        :     0     # This specifies the position of filament in extruder after slicer tip forming move
gcode_load_sequence        :     0     # Advanced: Gcode loading sequence 1=enabled, 0=internal logic (default)
gcode_unload_sequence      :     0     # Advanced: Gcode unloading sequence, 1=enabled, 0=internal logic (default)
auto_calibrate_gates       :     0     # Automated gate (not gate#0) calibration. 1=calibrated automatically on first load, 0=disabled
strict_filament_recovery   :     0     # If enabled with MMU with toolhead sensor, this will cause filament position recovery to
                # perform extra moves to look for filament trapped in the space after extruder but before sensor
retry_tool_change_on_error : 0         # Whether to automatically retry a failed tool change. If enabled Happy Hare will perform
                # the equivalent of 'MMU_RECOVER' + 'Tx' commands which usually is all that is necessary
                # to recover. Note that enabling this can mask problems with your MMU
print_start_detection       : 1        # Enabled for Happy Hare to automatically detect start and end of print and call
                # _MMU_START_PRINT and _MMU_END_PRINT. Disable if you want to include in your own macros
encoder_move_validation      : 1       # 1 = Normally Encoder validates move distances are within given tolerance (slower but more safe)
                # 0 = Validation is disabled for many moves (eliminates slight pause between moves but less safe)

# Advanced: MMU macro overrides --- ONLY SET IF YOU'RE COMFORTABLE WITH KLIPPER MACROS -----------------------------------
#
# When a print or the MMU should be paused, Happy Hare will call the `PAUSE` macro by default. If you want additional
# behaviour, you can override the macro that is called by Happy Hare. Some examples as to why you may want this:
# 1. You are using a sparse purge tower and you want Happy Hare errors to park above your purge tower as to not hit
#    any models that are between your tower and normal pause location
# 2. You want to additionally call a macro that sends a push notification on filament swap error
# 3. You want to set additional static arguments to either the default pause macro or your own macro
#
# IMPORTANT: Whatever macro you call _must_ ultimately leave the printer in a paused state. Failure to do so will result
#            in failed prints, jams, and physical hardware crashes
#
#pause_macro: PAUSE
#form_tip_macro: _MMU_FORM_TIP_STANDALONE