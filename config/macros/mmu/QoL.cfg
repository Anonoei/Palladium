########################################################################
# Simplified subset of commands For visability in Mainsail/Fluidd UI
########################################################################
[gcode_macro SET_MMU_GATE]
description: Set ERCF gates
gcode:
    {% set GATE     = params.GATE|int %}
    {% set MATERIAL = params.MATERIAL|string|upper %}
    {% set BRAND    = params.BRAND|string|upper %}
    {% set COLOR    = params.COLOR|string|lower %}

    {% set CFG = printer["gcode_macro _CONFIG"] %}

    MMU_GATE_MAP GATE={GATE} MATERIAL={MATERIAL} COLOR={COLOR}

    {% set BRANDS = CFG.mmu_state_gate_brand %}
    #{% BRANDS.GATE = BRAND %}
    SET_GCODE_VARIABLE MACRO=_CONFIG VARIABLE=mmu_state_gate_brand VALUE=['"{BRANDS[0]}"','"{BRANDS[1]}"','"{BRANDS[2]}"','"{BRANDS[3]}"','"{BRANDS[4]}"','"{BRANDS[5]}"']
    SAVE_VARIABLE VARIABLE=mmu_state_gate_brand VALUE=['"{BRANDS[0]}"','"{BRANDS[1]}"','"{BRANDS[2]}"','"{BRANDS[3]}"','"{BRANDS[4]}"','"{BRANDS[5]}"']

[gcode_macro MMU_GATES]
description: Show MMU gates
gcode:
    {% set svv = printer.save_variables.variables %}

    {% set MATERIALS = svv.mmu_state_gate_material %}
    {% set BRANDS = svv.mmu_state_gate_brand %}
    {% set COLORS = svv.mmu_state_gate_color %}
    {% set STATUS = svv.mmu_state_gate_status %}

    {% for idx in range(MATERIALS|length) %}
        _LOG NAME="mmu.QoL.MMU_GATES" LVL=INFO MSG="Gate {idx}: [{STATUS[idx]}] {MATERIALS[idx]} {BRANDS[idx]} {COLORS[idx]}"
    {% endfor %}

[gcode_macro SET_TOOL]
description: Find tool matching provided arguments
gcode:
    {% set MATERIAL=params.MATERIAL|string|upper %}
    {% set BRAND=params.BRAND|string|upper %}
    {% set COLOR=params.COLOR|string|lower %}

    {% set SOFT=params.SOFT|default(0) %}
    {% set RANDOM=params.RANDOM|default(0) %}

    _LOG NAME="mmu.QoL.SET_TOOL" LVL=INFO MSG="Checking for gate with {MATERIAL} {BRAND} {COLOR}"

    {% set svv = printer.save_variables.variables %}

    {% set MATERIALS = svv.mmu_state_gate_material %}
    {% set BRANDS = svv.mmu_state_gate_brand %}
    {% set COLORS = svv.mmu_state_gate_color %}
    {% set STATUS = svv.mmu_state_gate_status %}
    {% set SELECTED = svv.mmu_state_tool_selected %}
    {% set LOADED = svv.mmu_state_loaded_status %}

    {% set GATE = -1 %}
    {% set MAT_IDX = [] %}
    {% set BND_IDX = [] %}
    {% set COL_IDX = [] %}
    
    {% for idx in range(MATERIALS|length) %}
        {% if MATERIALS[idx] == MATERIAL and STATUS[idx] >= 0 %}
            {% set _ = MAT_IDX.append(idx) %}
        {% endif %}
    {% endfor %}
    _LOG NAME="mmu.QoL.SET_TOOL" LVL=TRACE MSG="Got materials {MAT_IDX}"

    {% if BRAND != "NONE" %}
        {% for idx in MAT_IDX %}
            {% if BRANDS[idx] == BRAND and STATUS[idx] >= 0 %}
                {% set _ = BND_IDX.append(idx) %}
            {% endif %}
        {% endfor %}
        _LOG NAME="mmu.QoL.SET_TOOL" LVL=TRACE MSG="Got brands {BND_IDX}"
    {% endif %}

    {% if COLOR != "NONE" %}
        {% for idx in BND_IDX %}
            {% if COLORS[idx] == COLOR and STATUS[idx] >= 0 %}
                {% set _ = COL_IDX.append(idx) %}
            {% endif %}
        {% endfor %}
        _LOG NAME="mmu.QoL.SET_TOOL" LVL=TRACE MSG="Got colors {COL_IDX}"
    {% endif %}

    {% if MAT_IDX %}
        {% if LOADED and SELECTED in MAT_IDX %}
            {% set GATE = SELECTED %}
        {% else %}
            {% if RANDOM %}
                {% set GATE = MAT_IDX[(range(MAT_IDX|length))|random] %}
            {% else %}
                {% set GATE = MAT_IDX[0] %}
            {% endif %}
        {% endif %}
    {% endif %}
    
    {% if BND_IDX %}
        {% if LOADED and SELECTED in BND_IDX %}
            {% set GATE = SELECTED %}
        {% else %}
            {% if RANDOM %}
                {% set GATE = BND_IDX[(range(BND_IDX|length))|random] %}
            {% else %}
                {% set GATE = BND_IDX[0] %}
            {% endif %}
        {% endif %}
    {% endif %}
    
    {% if COL_IDX %}
        {% if LOADED and SELECTED in COL_IDX %}
            {% set GATE = SELECTED %}
        {% else %}
            {% if RANDOM %}
                {% set GATE = COL_IDX[(range(COL_IDX|length))|random] %}
            {% else %}
                {% set GATE = COL_IDX[0] %}
            {% endif %}
        {% endif %}
    {% endif %}

    
    {% if GATE != -1 %}
        _LOG NAME="mmu.QoL.SET_TOOL" LVL=INFO MSG="Setting tool to T{GATE} with {MATERIALS[GATE]} {BRANDS[GATE]} {COLORS[GATE]}!" DISPLAY=TRUE
        {% if SOFT %}
            MMU_SELECT GATE={GATE}
        {% else %}
            T{GATE}
        {% endif %}
    {% else %}
        _LOG NAME="mmu.QoL.SET_TOOL" LVL=ERROR MSG="Failed to pick a gate!"
    {% endif %}
    

[gcode_macro _MMU_ACTION_CHANGED]
description: Called when an action has changed
gcode:
    # This occurs when the ERCF action status changes.  `printer.ercf.action` will contain
    # the current action string. See Happy Hare README for full list
    {% set ACTION = printer.mmu.action|string %}
    {% set OLD_ACTION = params.OLD_ACTION|string %}

    {% if ACTION|string == "Idle" %}
    {% endif %}

    {% if ACTION|string == "Loading" %}
        _SET_STATUS STATUS=loading
    {% endif %}

    {% if ACTION|string == "Unloading" %}
        _SET_STATUS STATUS=unloading
    {% endif %}

    {% if ACTION|string == "Loading Ext" %} # Loading into the extruder
        _SET_STATUS STATUS=loading
    {% endif %}

    {% if ACTION|string == "Exiting Ext" %} # Unloading from extruder
        _SET_STATUS STATUS=unloading
    {% endif %}

    {% if ACTION|string == "Forming Tip" %}
    {% endif %}

    {% if ACTION|string == "Heating" %}
        _SET_STATUS STATUS=heating
    {% endif %}

    {% if ACTION|string == "Checking" %} # Checking gates for filament
    {% endif %}

    {% if ACTION|string == "Homing" %} # Homing the selector
         _SET_STATUS STATUS=homing
    {% endif %}

    {% if ACTION|string == "Selecting" %} # Selector is moving to select new filament
    {% endif %}

    {% if ACTION|string == "Unknown" %}
    {% endif %}

[gcode_macro MMU__EJECT]
gcode: MMU_EJECT

[gcode_macro MMU__HOME]
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    {% set FORCE_UNLOAD = params.FORCE_UNLOAD|default(0)|int %}
    MMU_HOME TOOL={TOOL} FORCE_UNLOAD={FORCE_UNLOAD}

[gcode_macro MMU__STATUS]
gcode: MMU_STATUS

[gcode_macro MMU__MOTORS_OFF]
gcode: MMU_MOTORS_OFF

[gcode_macro MMU__SERVO]
gcode:
    {% set POS = params.POS|default("up")|string %}
    MMU_SERVO POS={POS}

[gcode_macro MMU__SELECT_TOOL]
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    MMU_SELECT TOOL={TOOL}

[gcode_macro MMU__SELECT_BYPASS]
gcode: MMU_SELECT_BYPASS

[gcode_macro MMU__LOAD_BYPASS]
gcode: MMU_LOAD_BYPASS

[gcode_macro MMU__RECOVER]
gcode: MMU_RECOVER

[gcode_macro MMU__PRELOAD]
gcode:
    {% set GATE = params.GATE|default(0)|int %}
    MMU_PRELOAD GATE={GATE}

[gcode_macro MMU__CHECK_GATES]
gcode:
    {% set GATE = params.GATE|default(0)|int %}
    MMU_CHECK_GATES GATE={GATE}

# Useful convenience commands...

[gcode_macro MMU_CHANGE_TOOL_STANDALONE]
description: Convenience macro for inclusion in print_start for initial tool load (defined in mmu_software.cfg)
gcode:
    {% set TOOL = params.TOOL|default(0)|int %}
    MMU_CHANGE_TOOL TOOL={TOOL} STANDALONE=1