#####################################################################
#   Homing
#####################################################################
#  [homing_override]
#  _HOME_X
#  _HOME_Y
#  _HOME_Z

[homing_override]
axes: xyz
gcode:

    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set CLEAR = CFG.print_bed_clear %}
    {% if CLEAR == True %}
    
        {% set SAFETY_HOP         = CFG.home_safety_hop %}
        {% set SAFETY_HOP_SPEED   = CFG.home_safety_hop_speed %}
    
        # Read the current acceleration max
        {% set cur_accel = printer.toolhead.max_accel %}
        {% set cur_accel_to_decel = printer.toolhead.max_accel_to_decel %}
        # Read requested homing axis
        {% set requested = {'x': False,
                            'y': False,
                            'z': False} %}
        {% if   not 'X' in params
            and not 'Y' in params 
            and not 'Z' in params %}
            {% set X, Y, Z = True, True, True %}
        {% else %}
            {% if 'X' in params %}
                {% set X = True %}
                {% set null = requested.update({'x': True}) %}
            {% endif %}       
            {% if 'Y' in params %}
                {% set Y = True %}
                {% set null = requested.update({'y': True}) %}
            {% endif %}     
            {% if 'Z' in params %}
                {% set Z = True %}
                {% set null = requested.update({'z': True}) %}
            {% endif %}        
        {% endif %}
    
        _STATUS_HOMING
    
        # Pre-homing "unsafe" z-hop to protect bed
        {% if "z" in printer.toolhead.homed_axes %}
            _LOG NAME="HOMING" LVL=TRACE MSG="Z in home axes, moving to SAFETY_HOP"
            _POSITION_ABSOLUTE
            G0 Z{SAFETY_HOP} F{(SAFETY_HOP_SPEED * 60)}
        {% elif not "x" in printer.toolhead.homed_axes or not "y" in printer.toolhead.homed_axes %}
            _LOG NAME="HOMING" LVL=TRACE MSG="Performing safety hop"
            SET_KINEMATIC_POSITION Z=0
            _POSITION_RELATIVE
            G0 Z{SAFETY_HOP} F{(SAFETY_HOP_SPEED * 60)}
            STEPPERS_OFF
        {% endif %}
    
        # Homing
        {% if X %}
            _HOME_X
        {% endif %}
        {% if Y %}
            _HOME_Y
        {% endif %}
        {% if Z %}
            _HOME_Z
        {% endif %}
    
        {% if printer.toolhead.max_accel != cur_accel %}
            SET_VELOCITY_LIMIT ACCEL={cur_accel} ACCEL_TO_DECEL={cur_accel_to_decel}
        {% endif %}
    
        _CLEAR_BUFFER
    
        _STATUS_READY
    {% else %}
        _LOG NAME="Homing" LVL="WARN" MSG="Cannot home when bed is not clear!" DISPLAY=TRUE
    {% endif %}

[gcode_macro _HOME_X]
description: Sensorlessly home X with modified current
gcode:
    {% set driver_config   = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR         = driver_config.run_current %}

    {% set CFG             = printer["gcode_macro _CONFIG"] %}
    {% set HOME_ACCEL      = CFG.home_accel %}
    {% set HOME_CUR        = CFG.home_x_current %}

    {% set BOUNCE_ENABLED  = CFG.home_bounce_enabled %}
    {% set BOUNCE_DISTANCE = CFG.home_bounce_distance %}
    {% set BOUNCE_SPEED    = CFG.home_bounce_speed %}

    {% set WAIT_TIME       = CFG.home_wait %}

    {% set CLEAR = CFG.print_bed_clear %}
    {% if CLEAR == True %}
        _LOG NAME="HOMING.X" LVL=TRACE MSG="Homing X axis"
        {% if CFG.home_sensorless %}
            # Set stepper current and acceleration
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
            SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL} ACCEL_TO_DECEL={(HOME_ACCEL * 0.5)}
            _PAUSE T={WAIT_TIME} ; Wait to ensure driver stall flag is clear
            # Home
        {% endif %}
        G28 X0
    
        _CLEAR_BUFFER
        {% if BOUNCE_ENABLED %}
            {% set max = printer.toolhead.axis_maximum %}
            {% set min = printer.toolhead.axis_minimum %}
            {% set pos = printer.toolhead.position %}
            {% if pos.x == max.x %}
                _LOG NAME="HOMING.X" LVL=TRACE MSG="Bouncing to r{max.x - BOUNCE_DISTANCE}"
                _POSITION_RELATIVE
                G0 X{max.x - BOUNCE_DISTANCE} F{(BOUNCE_SPEED * 60)}
            {% elif pos.x == min.x %}
                _LOG NAME="HOMING.X" LVL=TRACE MSG="Bouncing to r{min.x + BOUNCE_DISTANCE}"
                _POSITION_RELATIVE
                G0 X{min.x + BOUNCE_DISTANCE} F{(BOUNCE_SPEED * 60)}
            {% else %}
                _LOG NAME="HOMING.X" LVL=TRACE MSG="Bouncing to {(max.x - min.x)/2}"
                _POSITION_ABSOLUTE
                G0 X{(max.x - min.x)/2} F{(BOUNCE_SPEED * 60)}
            {% endif %}
        {% endif %}

        {% if CFG.home_sensorless %}
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} ; reset stepper current
            _PAUSE T={WAIT_TIME} ; Wait to ensure driver stall flag is clear
        {% endif %}
    {% else %}
        LOG NAME="HOMING.X" LVL="WARN" MSG="Cannot home when bed is not clear!" DISPLAY=TRUE
    {% endif %}

[gcode_macro _HOME_Y]
description: Sensorlessly home Y with modified current
gcode:
    {% set driver_config   = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR         = driver_config.run_current %}

    {% set CFG             = printer["gcode_macro _CONFIG"] %}
    {% set HOME_ACCEL      = CFG.home_accel %}
    {% set HOME_CUR        = CFG.home_y_current %}

    {% set BOUNCE_ENABLED  = CFG.home_bounce_enabled %}
    {% set BOUNCE_DISTANCE = CFG.home_bounce_distance %}
    {% set BOUNCE_SPEED    = CFG.home_bounce_speed %}

    {% set WAIT_TIME       = CFG.home_wait %}

    {% set CLEAR = CFG.print_bed_clear %}
    {% if CLEAR == True %}
        _LOG NAME="HOMING.Y" LVL=TRACE MSG="Homing Y axis"
        {% if CFG.home_sensorless %}
            # Set stepper current and acceleration
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
            SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL} ACCEL_TO_DECEL={(HOME_ACCEL * 0.5)}
            _PAUSE T={WAIT_TIME} ; Wait to ensure driver stall flag is clear
        {% endif %}
        # Home
        G28 Y0
    
        _CLEAR_BUFFER
        {% if BOUNCE_ENABLED %}
            {% set max = printer.toolhead.axis_maximum %}
            {% set min = printer.toolhead.axis_minimum %}
            {% set pos = printer.toolhead.position %}
            {% if pos.y == max.y %}
                _LOG NAME="HOMING.Y" LVL=TRACE MSG="Bouncing to r{max.y - BOUNCE_DISTANCE}"
                _POSITION_RELATIVE
                G0 Y{max.y - BOUNCE_DISTANCE} F{(BOUNCE_SPEED * 60)}
            {% elif pos.y == min.y %}
                _LOG NAME="HOMING.Y" LVL=TRACE MSG="Bouncing to r{min.y + BOUNCE_DISTANCE}"
                _POSITION_RELATIVE
                G0 Y{min.y + BOUNCE_DISTANCE} F{(BOUNCE_SPEED * 60)}
            {% else %}
                _LOG NAME="HOMING.Y" LVL=TRACE MSG="Bouncing to {(max.y - min.y)/2}"
                _POSITION_ABSOLUTE
                G0 Y{(max.y - min.y)/2} F{(BOUNCE_SPEED * 60)}
            {% endif %}
        {% endif %}

        {% if CFG.home_sensorless %}
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} ; reset stepper current
            _PAUSE T={WAIT_TIME} ; Wait to ensure driver stall flag is clear
        {% endif %}
    {% else %}
        LOG NAME="HOMING.Y" LVL="WARN" MSG="Cannot home when bed is not clear!" DISPLAY=TRUE
    {% endif %}

[gcode_macro _HOME_Z]
description: Home Z
gcode:
    {% set CFG             = printer["gcode_macro _CONFIG"] %}
    {% set PROBE_X         = CFG.home_probe_x %}
    {% set PROBE_Y         = CFG.home_probe_y %}
    {% set PROBE_SPEED     = CFG.home_probe_speed %}
    {% set PROBE_HOP       = CFG.home_probe_hop %}
    {% set PROBE_HOP_SPEED = CFG.home_probe_hop_speed %}

    {% set CLEAR = CFG.print_bed_clear %}
    {% if CLEAR == True %}
        _LOG NAME="HOMING.Z" LVL=TRACE MSG="Homing Z axis"
        _POSITION_ABSOLUTE
        G0 X{PROBE_X} Y{PROBE_Y} F{(PROBE_SPEED * 60)} # Move to safe coordinates
        G28 Z # Home Z
        G0 Z{PROBE_HOP} F{PROBE_HOP_SPEED} # Post z-home z-hop
    {% else %}
        LOG NAME="HOMING.Z" LVL="WARN" MSG="Cannot home when bed is not clear!" DISPLAY=TRUE
    {% endif %}