###############################################
# Test Macros
###############################################
[gcode_macro _ERCF_DISPLAY_ENCODER_POS]
description: Display current value of the ERCF encoder
gcode:
    M118 Encoder value is {printer['ercf'].encoder_pos|float}

[gcode_macro _ERCF_TEST_MOVE_GEAR]
description: Move the ERCF gear
gcode:
    {% set move_length = params.LENGTH|default(200.0)|float %}
    {% set move_speed = params.SPEED|default(50.0)|float %}
    {% set move_accel = params.ACCEL|default(200.0)|float %}
    MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
    MANUAL_STEPPER STEPPER=gear_stepper MOVE={move_length|float} SPEED={move_speed|float} ACCEL={move_accel|float}

[gcode_macro _ERCF_TEST_SERVO]
description: Test the servo angle
gcode:
    SET_SERVO SERVO=ercf_servo ANGLE={params.VALUE|float}
    G4 P{250 + printer["gcode_macro _ERCF_VAR"].extra_servo_dwell_up|int}
    SET_SERVO SERVO=ercf_servo WIDTH=0.0

[gcode_macro _ERCF_TEST_GRIP]
description: Test the ERCF grip for a Tool
gcode:
    _ERCF_SERVO_DOWN
    _ERCF_MOTORS_OFF

[gcode_macro _ERCF_TEST_LOAD_SEQUENCE]
description: Test sequence
gcode:
    {% set loop_number = params.LOOP|default(10)|int %}
    {% set use_rand = params.RAND|default(0)|int %}
    {% for iteration in range(loop_number|int) %}
        {% for load in range((printer["gcode_macro _ERCF_VAR"].colorselector|length)|int) %}
            {% if use_rand|int == 1 %}
                _ERCF_SELECT_TOOL TOOL={range(0, printer["gcode_macro _ERCF_VAR"].colorselector|length)|random}
            {% else %}
                _ERCF_SELECT_TOOL TOOL={load|int}
            {% endif %}
            
            ERCF_LOAD LENGTH=100
            G4 P50
            ERCF_UNLOAD LENGTH=100
            _ERCF_UNSELECT_TOOL
            G4 P200
        {% endfor %}
    {% endfor %}